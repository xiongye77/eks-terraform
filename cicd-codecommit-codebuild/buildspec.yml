version: 0.2

phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/sample-app:$CODEBUILD_RESOLVED_SOURCE_VERSION .
  post_build:
    commands:
      # push
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/sample-app:$CODEBUILD_RESOLVED_SOURCE_VERSION $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/sample-app:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/sample-app:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/sample-app:latest
      - yum -y -q -e 0 install moreutils bash-completion nmap bind-utils
      - echo "Terraform"
      - wget -q https://releases.hashicorp.com/terraform/1.1.7/terraform_1.1.7_linux_amd64.zip
      - unzip -qq terraform_1.1.7_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - rm -f terraform_1.1.7_linux_amd64.zip
      - echo "kubectl"
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - aws sts get-caller-identity
      - aws eks update-kubeconfig --name eks-test-cluster
      - aws eks list-clusters
      - kubectl get nodes
      - ls -l
      - #
      - terraform init
      - #aws eks list-clusters
      - terraform destroy  -auto-approve
      - terraform validate
      
      - terraform plan -out tfplan
      - terraform apply tfplan
      - #"cd .."
